# MDEV-742, MDEV-21469 XA replication, and xa crash-safe.
# Tests prove xa state is recovered to a prepared or completed upon
# post-crash recovery, incl a multi-engine case.

--source include/have_rocksdb.inc
--source include/have_innodb.inc
--source include/have_debug.inc
--source include/master-slave.inc
--source include/have_binlog_format_row.inc

--connection slave
--source include/stop_slave.inc

--connection master
CALL mtr.add_suppression("Found . prepared XA transactions");
create table t1 (a int primary key) engine=rocksdb;
create table t2 (a int primary key) engine=innodb;

XA START 'xa1';
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (2);
XA END 'xa1';
SET SESSION DEBUG_DBUG="d,simulate_crash_after_binlog_prepare";

--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--error 2013 # CR_SERVER_LOST
XA PREPARE 'xa1';
--source include/wait_until_disconnected.inc
--let $rpl_server_number = 1
--source include/rpl_reconnect.inc
--echo "*** xa1 in the list"
XA RECOVER;
XA ROLLBACK 'xa1';
SELECT count(*) as zero FROM t1;
SELECT count(*) as zero FROM t2;


XA START 'xa2';
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (2);
XA END 'xa2';
XA PREPARE 'xa2';
SET SESSION DEBUG_DBUG="d,simulate_crash_after_binlog_rollback";

--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--error 2013 # CR_SERVER_LOST
XA ROLLBACK 'xa2';
--source include/wait_until_disconnected.inc
--let $rpl_server_number = 1
--source include/rpl_reconnect.inc
--echo "*** empty list"
XA RECOVER;
SELECT count(*) as zero FROM t1;
SELECT count(*) as zero FROM t2;


XA START 'xa3';
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (2);
XA END 'xa3';
XA PREPARE 'xa3';
SET SESSION DEBUG_DBUG="d,simulate_crash_after_binlog_commit";

--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--error 2013 # CR_SERVER_LOST
XA COMMIT 'xa3';
--source include/wait_until_disconnected.inc
--let $rpl_server_number = 1
--source include/rpl_reconnect.inc
--echo "*** empty list"
XA RECOVER;
SELECT count(*) as one FROM t1;
SELECT count(*) as one FROM t2;


--connection slave
--source include/start_slave.inc

--connection master
--sync_slave_with_master
let $diff_tables= master:t1, slave:t1;
source include/diff_tables.inc;
let $diff_tables= master:t2, slave:t2;
source include/diff_tables.inc;

--connection master
SET SESSION DEBUG_DBUG="";
drop table t1,t2;
--sync_slave_with_master

--source include/rpl_end.inc
